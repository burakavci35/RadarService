// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RadarService.Entities.Models;

#nullable disable

namespace RadarService.Entities.Migrations
{
    [DbContext(typeof(RadarDbContext))]
    [Migration("20230212092324_Test")]
    partial class Test
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RadarService.Entities.Models.Command", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Command", (string)null);
                });

            modelBuilder.Entity("RadarService.Entities.Models.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BaseAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Device", (string)null);
                });

            modelBuilder.Entity("RadarService.Entities.Models.DeviceCommand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CommandId")
                        .HasColumnType("int");

                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommandId");

                    b.HasIndex("DeviceId");

                    b.ToTable("DeviceCommand", (string)null);
                });

            modelBuilder.Entity("RadarService.Entities.Models.DeviceScheduler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("SchedulerId")
                        .HasColumnType("int");

                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.HasKey("Id", "SchedulerId", "DeviceId");

                    b.HasIndex("DeviceId");

                    b.HasIndex("SchedulerId");

                    b.ToTable("DeviceScheduler", (string)null);
                });

            modelBuilder.Entity("RadarService.Entities.Models.FormParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RequestId");

                    b.ToTable("FormParameter", (string)null);
                });

            modelBuilder.Entity("RadarService.Entities.Models.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Request", (string)null);
                });

            modelBuilder.Entity("RadarService.Entities.Models.ResponseCondition", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("CommandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Condition")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("RequestId");

                    b.ToTable("ResponseCondition", (string)null);
                });

            modelBuilder.Entity("RadarService.Entities.Models.Scheduler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("Scheduler", (string)null);
                });

            modelBuilder.Entity("RadarService.Entities.Models.Step", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Step", (string)null);
                });

            modelBuilder.Entity("RadarService.Entities.Models.StepRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CommandId")
                        .HasColumnType("int");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<int>("StepId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommandId");

                    b.HasIndex("RequestId");

                    b.HasIndex("StepId");

                    b.ToTable("StepRequest", (string)null);
                });

            modelBuilder.Entity("RadarService.Entities.Models.DeviceCommand", b =>
                {
                    b.HasOne("RadarService.Entities.Models.Command", "Command")
                        .WithMany("DeviceCommands")
                        .HasForeignKey("CommandId")
                        .IsRequired()
                        .HasConstraintName("FK_DeviceCommand_Command");

                    b.HasOne("RadarService.Entities.Models.Device", "Device")
                        .WithMany("DeviceCommands")
                        .HasForeignKey("DeviceId")
                        .IsRequired()
                        .HasConstraintName("FK_DeviceCommand_Device");

                    b.Navigation("Command");

                    b.Navigation("Device");
                });

            modelBuilder.Entity("RadarService.Entities.Models.DeviceScheduler", b =>
                {
                    b.HasOne("RadarService.Entities.Models.Device", "Device")
                        .WithMany("DeviceSchedulers")
                        .HasForeignKey("DeviceId")
                        .IsRequired()
                        .HasConstraintName("FK_DeviceScheduler_Device");

                    b.HasOne("RadarService.Entities.Models.Scheduler", "Scheduler")
                        .WithMany("DeviceSchedulers")
                        .HasForeignKey("SchedulerId")
                        .IsRequired()
                        .HasConstraintName("FK_DeviceScheduler_Scheduler");

                    b.Navigation("Device");

                    b.Navigation("Scheduler");
                });

            modelBuilder.Entity("RadarService.Entities.Models.FormParameter", b =>
                {
                    b.HasOne("RadarService.Entities.Models.Request", "Request")
                        .WithMany("FormParameters")
                        .HasForeignKey("RequestId")
                        .IsRequired()
                        .HasConstraintName("FK_FormParameter_Request");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("RadarService.Entities.Models.ResponseCondition", b =>
                {
                    b.HasOne("RadarService.Entities.Models.Request", "Request")
                        .WithMany("ResponseConditions")
                        .HasForeignKey("RequestId")
                        .IsRequired()
                        .HasConstraintName("FK_ResponseCondition_Request");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("RadarService.Entities.Models.StepRequest", b =>
                {
                    b.HasOne("RadarService.Entities.Models.Command", "Command")
                        .WithMany("StepRequests")
                        .HasForeignKey("CommandId")
                        .IsRequired()
                        .HasConstraintName("FK_StepRequest_Command");

                    b.HasOne("RadarService.Entities.Models.Request", "Request")
                        .WithMany("StepRequests")
                        .HasForeignKey("RequestId")
                        .IsRequired()
                        .HasConstraintName("FK_StepRequest_Request");

                    b.HasOne("RadarService.Entities.Models.Step", "Step")
                        .WithMany("StepRequests")
                        .HasForeignKey("StepId")
                        .IsRequired()
                        .HasConstraintName("FK_StepRequest_Step");

                    b.Navigation("Command");

                    b.Navigation("Request");

                    b.Navigation("Step");
                });

            modelBuilder.Entity("RadarService.Entities.Models.Command", b =>
                {
                    b.Navigation("DeviceCommands");

                    b.Navigation("StepRequests");
                });

            modelBuilder.Entity("RadarService.Entities.Models.Device", b =>
                {
                    b.Navigation("DeviceCommands");

                    b.Navigation("DeviceSchedulers");
                });

            modelBuilder.Entity("RadarService.Entities.Models.Request", b =>
                {
                    b.Navigation("FormParameters");

                    b.Navigation("ResponseConditions");

                    b.Navigation("StepRequests");
                });

            modelBuilder.Entity("RadarService.Entities.Models.Scheduler", b =>
                {
                    b.Navigation("DeviceSchedulers");
                });

            modelBuilder.Entity("RadarService.Entities.Models.Step", b =>
                {
                    b.Navigation("StepRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
