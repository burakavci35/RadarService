@{
    ViewData["Title"] = "Index";
}

<div class="card shadow-sm">
    <div class="card-header">
        <h3 class="card-title">Device List</h3>
        <div class="card-toolbar">
          
        </div>
    </div>
    <div class="card-body">
        <div id="jqxgrid"></div>
    </div>
  
</div>
             


<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-body" id="modalBody">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-light" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

<script>






    $(document).ready(function () {
        var source =
        {
            datatype: "json",
            datafields: [
                { name: 'Id', type: 'string' },
                { name: 'Name', type: 'string' },
                { name: 'BaseAddress', type: 'string' },
                { name: 'Status', type: 'string' },
                { name: 'IsActive', type: 'bool' },
                { name: 'LastUpdateDateTime', type: 'date' },
            ],
            id: 'Id',
            url: '@Url.Action("GetList")',
            updaterow: function (rowid, newdata, commit) {
                $.post('@Url.Action("Edit")', { id: rowid, entityDto: newdata }, function (data) {
                    if (data.Success) {
                        commit(true);
                    } else {
                        commit(false);
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: data.Message,

                        });
                    }

                });

                commit(true);
            },
            deleterow: function (rowid, commit) {
                var rowdata = $('#jqxgrid').jqxGrid('getrowdatabyid', rowid);
                Swal.fire({
                    title: 'Do you want to delete this item?',
                    showCancelButton: true,
                    confirmButtonText: 'Delete',
                }).then((result) => {
                    /* Read more about isConfirmed, isDenied below */
                    if (result.isConfirmed) {
                        $.post('@Url.Action("DeleteConfirmed")', { id: rowdata.Id }, function (data) {
                            if (data.Success) {
                                commit(true);
                            } else {
                                commit(false);
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Oops...',
                                    text: data.Message,

                                });
                            }

                        });
                    }else{
                        commit(false);
                    }
                })
               
            }
        };
        var dataAdapter = new $.jqx.dataAdapter(source);
        $("#jqxgrid").jqxGrid(
            {
                theme: 'bootstrap',
                altrows: true,
                columnsresize: true,
                width: '%100',
                source: dataAdapter,
                sortable: true,
                filterable: true,
                filtermode: "excel",
                autoshowfiltericon: true,
                enabletooltips: true,
                pageable: true,
                autoheight: true,
                pagesize: 20,
                pagerButtonsCount: 10,
                showaggregates: true,
                showfilterrow: true,
                selectionmode: 'singlecell',
                showfilterrow: true,
                editable: true,
                showtoolbar: true,
                rendertoolbar: function (toolbar) {
                    var me = this;
                    var container = $("<div style='margin: 5px; height:160px !important;'></div>");
                    toolbar.append(container);
                    container.append('<input id="addNewButton" type="button" value="Add New" />');
                    container.append('<input  style="margin-left: 5px;" id="refreshButton" type="button" value="Refresh" />');
                    $("#addNewButton").jqxButton({ template: "primary" });
                    $("#refreshButton").jqxButton({ template: "success" });

                    $("#addNewButton")
                        .on('click',
                            function () {

                                $.get("@Url.Action("CreatePartialView")",
                                    function (data) {
                                        $('.modal-body').html(data);
                                        jQuery.validator.unobtrusive.parse('.modal-body')
                                        $("#myModal").modal("show");
                                    });
                            });
                    $("#refreshButton")
                        .on('click',
                            function () {

                                $("#jqxgrid").jqxGrid('updatebounddata', 'cells');
                            });
                },
                columns: [
                    { text: 'Name', datafield: 'Name' },
                    { text: 'Base Address', datafield: 'BaseAddress' },
                    { text: 'Status', datafield: 'Status', editable : false },
                    { text: 'Is Active', datafield: 'IsActive', columntype: 'checkbox' },
                    { text: 'Last Update DateTime', datafield: 'LastUpdateDateTime', cellsformat: 'dd.MM.yyyy HH:mm:ss', editable: false },
                    {
                        text: 'Delete', datafield: 'Delete', columntype: 'button', cellsrenderer: function () {
                            return "Delete";
                        }, buttonclick: function (row) {

                            var rowid = $('#jqxgrid').jqxGrid('getrowid', row);
                            var commit = $("#jqxgrid").jqxGrid('deleterow', rowid);



                        }
                    }
                ]
            });
    });
    var CreateOnSuccess = function (data) {
        if (data.Success) {
            $("#myModal").modal("hide");
            $("#jqxgrid").jqxGrid('updatebounddata', 'cells');
        } else {
            $("#myModal").modal("hide");
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: data.Message,

            });
        }
    };

</script>






