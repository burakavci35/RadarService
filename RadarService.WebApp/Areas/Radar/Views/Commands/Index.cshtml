@using RadarService.WebApp.Areas.Radar.Dtos;
@model IEnumerable<CommandDto>

@{
    ViewData["Title"] = "Steps";

    var command = Model.FirstOrDefault();
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>     
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>



@*<jqx-grid theme="@ViewData["Theme"]" sortable="true" filterable="true" pageable="true" editable="true" auto-height="true" auto-height="true" source-id="Id" instance="gridInstance()" source-id-for="@command.Id" source-model="command" source-url="@Url.Action("GetList")" create="@Url.Action("Create")" edit="@Url.Action("Edit")">
    <jqx-grid-columns>
        <jqx-grid-column datafield="Name" width="100" text="First Name"></jqx-grid-column>
       
  </jqx-grid-columns>
</jqx-grid>
<div style="margin-top:30px;">
    <label>Add/Delete/Update</label>
    <table>
        <tr>
            <td style="padding:10px;" align="right">First Name:</td>
            <td><jqx-input height="25" id="firstName"></jqx-input></td>
        </tr>
        <tr>
            <td style="padding:10px;" align="right">Last Name:</td>
            <td><jqx-input height="25" id="lastName"></jqx-input></td>
        </tr>
        <tr>
            <td style="padding:10px;" align="right">Product Name:</td>
            <td><jqx-input height="25" id="productName"></jqx-input></td>
        </tr>
    </table>
</div>
<jqx-button style="margin-top:20px;" theme="@ViewData["Theme"]" on-click="addRow()">Add New Row</jqx-button>
<jqx-button style="margin-top:20px;" theme="@ViewData["Theme"]" on-click="deleteRow()">Delete Selected Row</jqx-button>
<jqx-button style="margin-top:20px;" theme="@ViewData["Theme"]" on-click="updateRow()">Update Selected Row</jqx-button>
<script>
    var jqxGridInstance = {};
    function addRow() {
        jqxGridInstance.addrow(null, { Name: $("#name").val() });
    }

    function deleteRow() {
        var selectedRow = jqxGridInstance.getselectedrowindex();
        if (selectedRow < 0)
            return;
        var rowID = jqxGridInstance.getrowid(selectedRow);
        if (rowID != null) {
            jqxGridInstance.deleterow(rowID);
        }
    }

    function updateRow() {
        var selectedRow = jqxGridInstance.getselectedrowindex();
        if (selectedRow < 0)
            return;
        var rowID = jqxGridInstance.getrowid(selectedRow);
        if (rowID != null) {
            jqxGridInstance.updaterow(rowID, { Name: $("#name").val() });
        }
    }

    function gridInstance(instance) {
        jqxGridInstance = instance;
    }
</script>*@
@*<div id="grid">
</div>

<script type="text/javascript">
    $(document).ready(function () {
        var url = '@Url.Action("GetList")';
        // prepare the data
        var source =
        {
            datatype: "json",
            datafields: [
                { name: 'Id', type: 'int' },
                { name: 'Name', type: 'string' }
              
            ],
            type:"GET",
            id: 'Id',
            url: url
        };
      
        var dataAdapter = new $.jqx.dataAdapter(source);
        // initialize jqxGrid
        $("#grid").jqxGrid(
            {
               
                source: dataAdapter,
                pageable: true,
                autoheight: true,
                sortable: true,
                altrows: true,
                enabletooltips: true,
                editable: true,
                filterable: true,
                selectionmode: 'multiplecellsadvanced',
                columns: [
                    { text: 'Product Name', datafield: 'Name', width: 250 }
                   
                ]
               
            });
    });
</script>*@